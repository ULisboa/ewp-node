# This section is overriden on Docker development environment
server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:keystore/localhost.p12 # REPLACE with the correct keystore file path
    key-store-password: p@ssw0rd # REPLACE with the correct keystore password
    key-alias: dev # REPLACE with the correct keystore alias
    client-auth: want # "want" in order to allow client requests without embedded client certificate

# This section is overriden on Docker development environment
registry:
  url: localhost:8000
  autoRefresh: true
  timeBetweenRetriesInMilliseconds: 3000
  minTimeBetweenQueries: 3000

# Change this section if needed
db:
  driverClassName: org.h2.Driver
  url: jdbc:h2:mem:ewp_node__dev;DB_CLOSE_DELAY=-1
  username: sa
  password:
  hibernate:
    dialect: org.hibernate.dialect.H2Dialect
    hbm2ddlAuto: create
    timeZone: Europe/Lisbon

# EDIT this section accordingly.
bootstrap:
  # Hosts are bootstrapped if no host is currently defined on DB
  hosts:
    - code: ulisboa
      description: University of Lisbon
      adminEmail: admin@example.com
      adminNotes: Sample host
      adminProvider: Sample Provider (EWP Node)
      ounitIdInObjectsRequired: false
      ounitIdInObjectsRequiredErrorMessage: ""
      # Configuration of the Forward EWP APIs
      forwardEwpApi:
        # OPTIONAL
        # A list of clients that are able to use the Forward EWP APIs
        clients:
          # Each client has an ID and a secret.
          # The ID must be used as "iss" (issuer) of the JWT token used for authentication
          # for the Forward EWP APIs.
          # The ID must be unique among all clients, independent of the host.
          # The secret is used when generating a JWT token.
          # This secret key is used by the EWP node to assert that the received JWT token
          # was effectively produced by the client.
          # Hence, both host and EWP node must know this secret.
          - id: client-1
            secret: sample-host-forward-ewp-api-secret-1
          - id: client-2
            secret: sample-host-forward-ewp-api-secret-2
      coveredHeis:
        - schacCode: ulisboa.pt
          names:
            - locale: pt-PT
              value: Universidade de Lisboa
            - locale: en
              value: University of Lisbon
          otherHeiIds:
            - type: pic
              value: 949885305
            - type: erasmus
              value: P  LISBOA109
            - type: erasmus-charter
              value: 269558-EPP-1-2015-1-PT-EPPKA3-ECHE

manifest:
  entries:
    # If true, for each HEI ID/API pair, exclude providers when the primary host plugin (for that HEI ID) does not implement that API.
    # For instance, if this setting is true and for IIAs API, for a given HEI ID, there is only one host provider
    # available and that one is not from a host plugin marked as primary for that HEI ID, then the IIAs API will
    # not be marked as available in the manifest.
    # For development it is recommended this setting to be false in order to test non-primary host plugins.
    excludeIfNoPrimaryProviderAvailable: false

stats:
  portal:
    heiId: stats.erasmuswithoutpaper.eu

scheduling:
  # If true, scheduling services, such as Notification Daemon (to deliver CNR messages) and mapping synchronization,
  # are enabled.
  enabled: true

cnr:
  # Frequency on which notification daemon runs to process new/pending notifications
  intervalInMilliseconds: 5000
  # Maximum number of attempts to send a notification before considering it as a failure.
  # The notification daemon uses exponential delay, on the powers of 2 (in minutes), as wait time between attempts.
  # With then 10 maximum attempts, wait time for the last attempt = 2^10 minutes = 1024 minutes ~ 17 hours
  maxNumberAttempts: 10

sync:
  mappings:
    # Frequency on which sync mapping services are executed
    # 30m * 60s * 1000ms = 1800000ms
    intervalInMilliseconds: 1800000

# EDIT this section accordingly.
plugins:
  # Set the path to the plugins directory
  path: /plugins/

  # Manages the use of aspects (e.g. logging function calls) around plugins
  aspects:
    enabled: true

  # Variables may be defined per host plugin
  # For instance, in the example below, a property example.key belonging to a plugin with ID
  # ewp-host-plugin-demo is defined.
  ewp-host-plugin-demo:
    example:
      key: test

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,communications

actuator:
  security:
    username: actuator
    # "actuator" (without quotes) in bcrypt format
    # "{bcrypt}" specifies the password storage format (see https://docs.spring.io/spring-security/reference/features/authentication/password-storage.html)
    # e.g. test123
    password: "{bcrypt}$2a$10$DEPYoOhC9r9FA3ca2e8LYeQcS7bYVXymqwBvKY8cAy4baT3MhP/Z6"

admin:
  security:
    username: admin
    # "actuator" (without quotes) in bcrypt format
    # "{bcrypt}" specifies the password storage format (see https://docs.spring.io/spring-security/reference/features/authentication/password-storage.html)
    # e.g. test123
    password: "{bcrypt}$2a$10$DEPYoOhC9r9FA3ca2e8LYeQcS7bYVXymqwBvKY8cAy4baT3MhP/Z6"

springdoc:
  version: '@springdoc.version@'
  api-docs:
    groups:
      enabled: true